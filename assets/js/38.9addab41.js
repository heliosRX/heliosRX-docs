(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{213:function(e,t,s){"use strict";s.r(t);var r=s(0),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"bolt-cheat-sheet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bolt-cheat-sheet"}},[e._v("#")]),e._v(" Bolt Cheat Sheet")]),e._v(" "),s("h3",{attrs:{id:"syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('path /path/to/data [is Type] {\n  read() { <true-iff-reading-this-path-is-allowed> }\n  write() { <true-iff-writing-this-path-is-allowed> }\n  validate() { <additional-validation-rules> }\n\n  Alias:\n  create() { exp }  write() { prior(this) == null && exp }\n  update() { exp }  write() { prior(this) != null && this != null && exp }\n  delete() { exp }  write() { prior(this) != null && this == null && exp }\n\n  Index:\n  index() { [ "prop", ... ] }\n}\n')])])]),s("h3",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("function isUser(uid) { auth != null && auth.uid == uid }\n")])])]),s("h3",{attrs:{id:"string-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-methods"}},[e._v("#")]),e._v(" String Methods")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("s.length            - Number of characters in the string.\ns.includes(sub)     - Returns true iff sub is a substring of s.\ns.startsWith(sub)   - Returns true iff sub is a prefix of s.\ns.endsWith(sub)     - Returns true iff sub is a suffix of s.\ns.replace(old, new) - Returns a string where all occurances of string, `old`, are\n                      replaced by `new`.\ns.toLowerCase()     - Returns an all lower case version of s.\ns.toUpperCase()     - Returns an all upper case version of s.\ns.test(regexp)      - Returns true iff the string matches the regular expression.\n")])])]),s("h3",{attrs:{id:"db-refs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#db-refs"}},[e._v("#")]),e._v(" DB Refs")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ref.child           - Returns the property `child` of the reference.\nref[s]              - Return property referenced by the string, variable, `s`.\nref.parent()        - Returns the parent of the given refererence\n                      (e.g., ref.prop.parent() is the same as ref).\nprior(this)         - Value of `this` before the write is completed.\nprior(this.prop)    - Value of a property before the write is completed.\nkey()               - The (text) value of the inner-most parent property of the current location.\n")])])]),s("ul",[s("li",[e._v("Source: "),s("a",{attrs:{href:"https://github.com/FirebaseExtended/bolt/blob/master/docs/language.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/FirebaseExtended/bolt/blob/master/docs/language.md"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);