(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{234:function(e,a,t){"use strict";t.r(a);var s=t(0),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"ideas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ideas"}},[e._v("#")]),e._v(" Ideas")]),e._v(" "),t("h2",{attrs:{id:"api-design"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-design"}},[e._v("#")]),e._v(" API Design")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Idea: generate dependency tree directly from template paths (since {id}'s are known)")])]),e._v(" "),t("li",[t("p",[e._v("Idea: Define type in path string\nInstead of")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/challenge/{challengeId}/internal/\\*\n")])])]),t("p",[e._v("we do")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/challenge/{challengeId}/internal/{$taskId:UUID}      # (other UUID)\n/challenge/{challengeId}/internal/{$taskId:MY_UUID}   #\n/challenge/{challengeId}/internal/{$taskId:TIMESTAMP} #\n/challenge/{challengeId}/internal/{$taskId:taskId}    # < ??\n")])])]),t("ul",[t("li",[e._v("Idea: Define depencies")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('export const cohorts = new GenericStore(\n  "/challenge/{challengeId}/internal/cohorts/ * ",\n  cohortTypeDefinition,\n  { dependsOn: [ challenge, userId ] }\n);\n')])])]),t("h2",{attrs:{id:"relation-management"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#relation-management"}},[e._v("#")]),e._v(" Relation management")]),e._v(" "),t("ol",[t("li",[e._v("Allow writes on de-normalized data (batches)")]),e._v(" "),t("li",[e._v("Allow joins")]),e._v(" "),t("li",[e._v("Automatically detect “cached*”")])]),e._v(" "),t("h2",{attrs:{id:"features-database"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-database"}},[e._v("#")]),e._v(" Features database")]),e._v(" "),t("ol",[t("li",[e._v("Become backend neutral")]),e._v(" "),t("li",[e._v("Support key compression (Rosetta-Stone)")]),e._v(" "),t("li",[e._v("Support DB sharding")]),e._v(" "),t("li",[e._v("Support pagination")]),e._v(" "),t("li",[e._v("Implement easy throttling / debouncing")]),e._v(" "),t("li",[e._v("Implement getter to retrieve sortidx automatically")])]),e._v(" "),t("h2",{attrs:{id:"offline-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#offline-support"}},[e._v("#")]),e._v(" Offline support")]),e._v(" "),t("ol",[t("li",[e._v("Support offline caching")]),e._v(" "),t("li",[e._v("Provide interface for firebase feature keepSynced "),t("code",[e._v("scoresRef.keepSynced(true)")])]),e._v(" "),t("li",[e._v("Manage user persistence")]),e._v(" "),t("li",[e._v("Manage disk persistence\nSee: https://firebase.google.com/docs/database/android/offline-capabilities")]),e._v(" "),t("li",[e._v("Run in a Webworker / Serviceworker\nSee: https://github.com/pkaminski/fireworker")])]),e._v(" "),t("h2",{attrs:{id:"debug"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[e._v("#")]),e._v(" Debug")]),e._v(" "),t("ol",[t("li",[e._v("DEBUG TOOL as overlay: Which subscribers are active, which stores are available")])]),e._v(" "),t("h2",{attrs:{id:"type-definition-and-schema"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type-definition-and-schema"}},[e._v("#")]),e._v(" Type definition and schema")]),e._v(" "),t("ol",[t("li",[e._v("Bolt: "),t("code",[e._v(".bolt => .rule transpiler")])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/fny/firebase-bolt-transpiler",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bolt-Typescript-Transpiler"),t("OutboundLink")],1),e._v(": "),t("code",[e._v(".bolt => .ts")])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/YousefED/typescript-json-schema",target:"_blank",rel:"noopener noreferrer"}},[e._v("typescript-json-schema"),t("OutboundLink")],1),e._v(": "),t("code",[e._v(".ts => .json_schema")])]),e._v(" "),t("li",[e._v("avj: json-Schema validator")])]),e._v(" "),t("p",[e._v("Alternative:")]),e._v(" "),t("ol",[t("li",[e._v("Use Bolt-Parser to get AST-Tree: .bolt => .symbols")]),e._v(" "),t("li",[e._v("Write to own schema file: .symbols => .json")])]),e._v(" "),t("ul",[t("li",[e._v("vue-vuelidate-jsonschema: Create vuelidate validation rules based on json schema")]),e._v(" "),t("li",[e._v("Vee Element brings the simplicity of Vee Validate to Element UI forms.")]),e._v(" "),t("li",[e._v("Automatically infer JSON Schema from schema: https://www.jsonschema.net/")]),e._v(" "),t("li",[e._v("https://atom.io/packages/lang-bolt")])])])}),[],!1,null,null,null);a.default=n.exports}}]);